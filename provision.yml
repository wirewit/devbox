---
- name: Setup devbox vm
  hosts: all

  tasks:

    - name: add ansible repo
      apt_repository: repo=ppa:ansible/ansible

    - name: add tmux repo
      apt_repository: repo='ppa:pi-rho/dev'

    - name: install system packages
      apt: name={{item}} state=latest update_cache=yes
      with_items:
        - unzip
        - lxc
        - lxc-dev
        - dnsmasq
        - iptables-persistent
        - git
        - mercurial
        - ansible
        - python-pip
        - python-dev
        - python3
        - python3-dev
        - supervisor
        - vim
        - nginx

    - name: install python packages
      pip: name={{item}} state=latest
      with_items:
        - lxc-python2
        - tox
        - nodeenv
        - devpi-web
        - devpi-server

    - name: create devpi cache dir
      file: path=/srv/devpi state=directory owner=vagrant group=vagrant

    - name: upload supervisor conf for devpi
      template: src=templates/devpi.conf dest=/etc/supervisor/conf.d/devpi.conf
      notify: update supervisor services

    - name: enable local devpi for pip
      template: src=templates/pip.conf dest=/etc/pip.conf

    - name: enable local devpi for easy_install to vagrant user
      template:
          src: templates/pydistutils.cfg
          dest: /home/vagrant/.pydistutils.cfg
          owner: vagrant
          group: vagrant

    - name: enable local devpi for easy_install to root
      template:
          src: templates/pydistutils.cfg
          dest: /root/.pydistutils.cfg

    - name: create env for node packages
      command: nodeenv --prebuilt /opt/node creates=/opt/node

    - name: install ungit
      npm: executable=/opt/node/bin/npm global=yes name=ungit state=latest
      environment:
          PATH: /opt/node/bin:{{lookup('env', 'PATH')}}

    - name: create supervisor config for ungit
      template: src=templates/ungit.conf dest=/etc/supervisor/conf.d/ungit.conf
      notify: update supervisor services

    - name: create webserver dir
      file: path=/srv/www/ state=directory

    - name: remove default nginx server
      file: path=/etc/nginx/sites-enabled/default state=absent
      notify: restart nginx

    - name: upload custom nginx config
      template: src=templates/tools.conf dest=/etc/nginx/sites-enabled/tools.conf
      notify: restart nginx

    - name: download swagger editor
      get_url:
        url: https://github.com/swagger-api/swagger-editor/releases/download/v2.9.8/swagger-editor.zip
        dest: /srv/www/swagger-editor-v2.9.8.zip

    - name: unzip swagger editor
      unarchive: copy=no src=/srv/www/swagger-editor-v2.9.8.zip dest=/srv/www/ creates=/srv/www/swagger-editor

    - name: install tmux
      apt: pkg=tmux state=latest update_cache=no
      register: tmux

    - name: create dnsmasq config file
      file: path=/etc/lxc/dnsmasq.conf state=touch

    - name: set lxc domain name
      lineinfile:
        dest: /etc/default/lxc-net
        regexp: "{{item.regexp}}"
        line: "{{item.line}}"
      with_items:
        - regexp: ^LXC_DOMAIN=
          line: LXC_DOMAIN="lxc"
        - regexp: ^LXC_DHCP_CONFILE=
          line: LXC_DHCP_CONFILE=/etc/lxc/dnsmasq.conf
      notify:
        - restart lxc-net

    - name: setup lxc nameserver
      lineinfile:
        dest: /etc/dnsmasq.d/lxc
        regexp: ^server=
        line: server=/lxc/10.0.3.1
      notify:
        - restart lxc-net

    - name: create base container
      command: >
          lxc-create --name base-ubuntu -t ubuntu -- r trusty
          --user dev --password dev
          creates=/var/lib/lxc/base-ubuntu/config

  handlers:

    - name: update supervisor services
      command: supervisorctl update

    - name: restart lxc-net
      service: name=lxc-net state=restarted

    - name: restart nginx
      service: name=nginx state=restarted

    - name: restart devpi
      supervisorctl: name=devpi state=restarted
